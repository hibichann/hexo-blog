{"title":"如何区分浏览器刷新和关闭？","date":"2023-07-12T11:09:23.000Z","date_formatted":{"ll":"2023年7月12日","L":"2023/07/12","MM-DD":"07-12"},"link":"JavaScript/distinguish-between-browser-refresh-and-close","tags":["JavaScript"],"categories":["JavaScript"],"updated":"2023-08-03T02:11:30.600Z","content":"<h4 id=\"起因\">起因<a title=\"#起因\" href=\"#起因\"></a></h4>\n<p>起因呢是群里有人提问说如何区分浏览器刷新和关闭的事件，他需求在关闭浏览器时清空所有 localStorage 的数据，因为 uhhh————很奇怪，他们的项目要求不能使用 sessionStorage，只能使用 localStorage。</p>\n<h4 id=\"所以这篇文章讨论的是如何在不使用-sessionstorage-的情况下，区分并实现浏览器刷新和关闭的事件。\">所以这篇文章讨论的是如何在不使用 sessionStorage 的情况下，区分并实现浏览器刷新和关闭的事件。<a title=\"#所以这篇文章讨论的是如何在不使用-sessionstorage-的情况下，区分并实现浏览器刷新和关闭的事件。\" href=\"#所以这篇文章讨论的是如何在不使用-sessionstorage-的情况下，区分并实现浏览器刷新和关闭的事件。\"></a></h4>\n<p>我一开始想到的是<code>onbeforeunload</code>或者<code>unload</code>事件，但是这个事件在浏览器关闭和刷新时都会触发的，<br>\n而且各个浏览器厂商的加载流程也不近相同，所以这个事件并不能用来区分浏览器刷新和关闭。<br>\n也包括其参数中的<code>e.currentTarget.performance.navigation.type</code>也是一样的。</p>\n<p>这个类型可以理解为当前的导航类型，而非下一步操作的类型，所以无法区分刷新和关闭。<br>\n他可以确定你是第一次加载或者是刷新所进来的方式（之前的类型），但是无法确定你将要刷新还是关闭（下一步的操作）。<br>\n然后是几个可行的方法：</p>\n<h4 id=\"心跳包\">心跳包<a title=\"#心跳包\" href=\"#心跳包\"></a></h4>\n<p>1.在页面上，添加 <code>onunload</code> 事件（伪代码）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myUnload</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 标记页面正在被卸载</span></span><br><span class=\"line\">\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>[<span class=\"string\">&quot;myUnloadEventFlag&quot;</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//通知服务器我们想在几秒钟内断开用户的连接</span></span><br><span class=\"line\">\t<span class=\"title function_\">askServerToDisconnectUserInAFewSeconds</span>()</span><br><span class=\"line\">\t<span class=\"comment\">// 异步 AJAX call</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.在您的页面上，将 <code>onload</code> 添加到 body（伪代码）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myLoad</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> t0 = <span class=\"title class_\">Number</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>[<span class=\"string\">&quot;myUnloadEventFlag&quot;</span>])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(t0)) t0 = <span class=\"number\">0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> t1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> duration = t1 - t0</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (duration &lt; <span class=\"number\">10</span> * <span class=\"number\">1000</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// less than 10 seconds since the previous Unload event =&gt; it&#x27;s a browser reload (so cancel the disconnection request)</span></span><br><span class=\"line\">\t\t\t<span class=\"title function_\">askServerToCancelDisconnectionRequest</span>() <span class=\"comment\">// asynchronous AJAX call</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// last unload event was for a tab/window close =&gt; do whatever you want (I do nothing here)</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.在服务器上，将断开连接请求收集到列表中，并设置一个计时器线程，该线程定期检查列表（我每 20 秒使用一次）。断开连接请求超时（即 5 秒消失）后，断开用户与服务器的连接。如果同时收到断开连接请求取消，则会从列表中删除相应的断开连接请求，以便用户不会断开连接。</p>\n<h4 id=\"鼠标事件\">鼠标事件<a title=\"#鼠标事件\" href=\"#鼠标事件\"></a></h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;mouseover&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onbeforeunload</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;mouseout&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onbeforeunload</span> = <span class=\"title class_\">ConfirmLeaveMessage</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ConfirmLeaveMessage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//return undefined;</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;Are you sure you want to leave this page without saving?&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>老实讲目前除了 sessionStorage 原生支持，还没有其他可靠的方案去判断浏览器为刷新或关闭，后续会继续更新本篇文章。</p>\n","prev":{"title":"js中的定时器似乎比实际时间更慢？","link":"JavaScript/timer-in-js"},"next":{"title":"阻止表单的默认行为时的行为","link":"JavaScript/form-default"},"plink":"http://hibi.pages.dev/JavaScript/distinguish-between-browser-refresh-and-close/","reading_time":"670 字约 4 分钟"}